[{"categories":null,"content":"Enfin !!! J’ai fini l’implémentation du CPU et une partie du GPU ! L’image du logo dans cet article représente l’apparition du logo Nintendo émulé par mon émulateur, mon propre code, c’est beau 🥲. Au passage, je me suis amusé, j’ai un peu changé les couleurs, dans le but de faire quelques tests sur le rendu graphique. Alors, pour émuler entièrement un jeu, il y a encore beaucoup de travail à faire. Peut-être un jour… L’émulateur sera capable de supporter des petits jeux comme Tetris, qui sait ? 🤔 ","date":"22-09-2021","objectID":"/gameboy-emulateur-premier-affichage/:0:0","series":null,"tags":["rust","emulation","dev"],"title":"Premier affichage pour mon émulateur de Gameboy !","uri":"/gameboy-emulateur-premier-affichage/"},{"categories":null,"content":"Objectif accompli En tous cas j’ai rempli l’objectif du projet qui était d’avoir l’affichage du logo fonctionnel, je suis déjà très content d’avoir réussi ! Pour le reste, c’est que du bonus. J’ai appris énormément grâce à ce projet et j’ai notamment une vision plus claire de comment fonctionne un CPU, la RAM ou encore un bios. Notamment la connexion entre chaque composant est super intéressante à concevoir 😊. La prochaine étape serait d’améliorer l’affichage car tout n’est pas implémenté, et peut-être afficher un premier écran de jeu ! Cependant, il y a encore du chemin à faire avant d’afficher un écran de jeu. Il faudra d’abord que j’implémente un parser du Header de la cartouche qui contient les informations importantes sur le jeu et sa mémoire. ","date":"22-09-2021","objectID":"/gameboy-emulateur-premier-affichage/:1:0","series":null,"tags":["rust","emulation","dev"],"title":"Premier affichage pour mon émulateur de Gameboy !","uri":"/gameboy-emulateur-premier-affichage/"},{"categories":null,"content":"Premier retour d’expérience de Rust, sur un side project Enfin, on termine avec un retour d’expérience sur l’utilisation de Rust pour ce projet. Pour faire simple: je réfléchis tout simplement à abandonner Rust et partir sur autre chose comme du C/C++ ou en profiter pour essayer le Zig par exemple. Étant plus habitué au C/C++, mon expérience de Rust a quand même été très frustrante. On passe de langages où le développeur est maitre de ce qu’il fait à un langage où, cette fois-ci, c’est le langage qui est maitre. C’est une expérience intéressante mais pas toujours facile à vivre. Alors, certes Rust apporte des choses intéressantes: une syntaxe un peu plus agréable que le C++ par exemple mais tout aussi puissante, Un gestionnaire de dépendances, une communauté sympa très dynamique et motivée ! Le tout, sans compter le caractère safe du langage qui est clairement un de ses plus gros intérêts. Mais, pour un side project, dans lequel le but premier n’est pas d’apprendre Rust, je dirais que c’est difficile de rester motivé à apprendre un langage qui te met beaucoup de de batons dans les roues ( pour la bonne cause, c’est sûr, mais est-ce que mon émulateur a vraiment besoin d’être safe ?). J’ai le sentiment d’avoir passé beaucooup plus de temps à me battre avec le langage qu’à réellement coder l’émulateur. En tous cas je suis quand même content d’avoir sauté le pas pour essayer Rust🦀 ! Je ne sais pas quand aura lieu la prochaine update sur ce projet mais en tous cas j’ai hâte de savoir si le moi du futur aura persévéré dans l’utilisation de Rust 😂. ","date":"22-09-2021","objectID":"/gameboy-emulateur-premier-affichage/:2:0","series":null,"tags":["rust","emulation","dev"],"title":"Premier affichage pour mon émulateur de Gameboy !","uri":"/gameboy-emulateur-premier-affichage/"},{"categories":null,"content":"Il est possible d’exporter les données que l’on souhaite depuis Docker, c’est une utilisation intéressante notamment pour faire des backups ! Ici on ne parle pas de clusters ou de Ceph, juste d’un seul serveur qui fait tourner des containers (ou en local sur votre machine). C’est une solution un peu naive mais qui a le mérite d’être facile à mettre en place lorsque l’on n’a qu’un seul serveur à gérer (par exemple pour un petit Homelab ou pour des projets qui n’ont pas besoin de scaler horizontalement ni d’avoir 99,99% d’uptime). Il existe plusieurs manières de faire et celle que je vais décrire aujourd’hui consiste à exécuter une commande directement depuis le serveur qui fait tourner les containers Docker. ","date":"21-09-2021","objectID":"/docker-backup-host/:0:0","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Backup de volumes Docker 🐳 Le backup de volumes depuis la machine host est une tâche intéressante à effectuer car elle nécessite de comprendre comment les volumes docker peuvent être utilisés ! ","date":"21-09-2021","objectID":"/docker-backup-host/:1:0","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Commande docker run --rm -v nom_volume_docker:/mon_volume_point_montage:ro -v dossier_backup_host:/backup ubuntu tar cvf /backup/mon_backup_$(date \"+%F-%Hh%M\").tar /mon_volume_point_montage ","date":"21-09-2021","objectID":"/docker-backup-host/:1:1","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Explications On commence par docker run --rm -v nom_volume_docker:/mon_volume_point_montage:ro qui va consister à monter le volume du container que l’on souhaite sauvegarder ( en read only histoire de ne pas faire de bêtises 🤪) dans un autre container qui, lui, s’occupera d’effectuer un backup. Ensuite, on a -v dossier_backup_host:/backup ubuntu , ce qui signifie que notre container de backups ( ici Ubuntu ) montera aussi un dossier de l’host ( dossier_backup_host ), cette fois-ci en écriture, pour pouvoir envoyer le résultat du backup à cet endroit. Le résultat sera donc un dossier de backups dans l’host auquel s’ajoutera un nouveau fichier de backups généré à partir du volume docker à sauvegarder 😁. C’est facultatif mais le tout peut être archivé ( ici au format tar), histoire de tout regrouper au même endroit dans une seule archive. ","date":"21-09-2021","objectID":"/docker-backup-host/:1:2","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Backup de base de données Ici, je montre un exemple avec MySQL mais le principe est le même avec Postgres. Pour éviter d’avoir à utiliser le mot de passe en clair dans la commande ou de le stocker en clair dans un script, on passe par l’utilisation des variables fournies dans le container de la base de données. On peut par exemple passer par la variable $MYSQL_PASSWORD dans le cas de MYSQL. ","date":"21-09-2021","objectID":"/docker-backup-host/:2:0","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Commande Voici ce que ça donne : docker ps | grep nom_container_db | awk '{print $1}' | xargs -I{} docker exec -i {} bash -c 'mysqldump -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE --skip-comments --no-tablespaces' | gzip \u003e mon_dump_genial_$(date \"+%F-%Hh%M\").psql.gz ","date":"21-09-2021","objectID":"/docker-backup-host/:2:1","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Explications On commence par récupérer l’identifiant du container de notre base de données, de la manière suivante : docker ps | grep nom_container_db | awk '{print $1}'. Il faudra bien penser à changer nom_container_db par le nom correct du container. Puis, il suffit d’utiliser xargs combiné à docker exec pour envoyer notre commande de dump au container. Cette commande utilise le programme mysqldump qui est fourni dans l’image docker officielle de mysql. On a juste à placer les bons paramètres en précisant bien les variables d’environnement au bon endroit et on pourra récupérer le dump ! Enfin, on passe tout ça dans gzip histoire d’avoir un dump compressé. Note : Dans le cas de l’utilisation d’un secret docker, il faudra passer par un chemin de type /run/secrets/chemin_secret et faire un cat sur ce chemin pour récupérer le mot de passe. ","date":"21-09-2021","objectID":"/docker-backup-host/:2:2","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Conclusion Voilà comment faire des backups de containers simplement ! Il suffit ensuite de créer un petit script qui contient les deux commandes et de mettre le tout dans une tâche cron ( ou systemd ) pour faire des backups régulièrement 🙂. Attention, pour une mise en production dans un cluster il faudra bien sûr utiliser une autre solution plus robuste ! ","date":"21-09-2021","objectID":"/docker-backup-host/:2:3","series":null,"tags":["shell","docker","terminal","linux","backups"],"title":"Export de données (backup) de containers Docker 🐳","uri":"/docker-backup-host/"},{"categories":null,"content":"Btop est un outil qui vient tout juste de sortir en version stable (1.0.1 à l’heure où j’écris cet article). C’est une évolution du programme bpytop, du même auteur, que j’avais déjà présenté en vidéo ( cf plus bas ). L’avantage de cette version est qu’elle est codée en C++ et est donc beaucoup beaucoup plus fluide et rapide ( ça se sent à l’utilisation ). Cet outil permet de faire du monitoring à la manière de top ou htop mais de manière plus agréable et surtout avec des indicateurs supplémentaires. ","date":"20-09-2021","objectID":"/btop-monitoring/:0:0","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Installation L’installation se fait de manière fluide, le plus simple semble d’exécuter le script install.sh dans la release disponible sur Github. ➜ btop ./install.sh ██████╗ ████████╗ ██████╗ ██████╗ ██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗ ██╗ ██╗ ██████╔╝ ██║ ██║ ██║██████╔╝ ██████╗██████╗ ██╔══██╗ ██║ ██║ ██║██╔═══╝ ╚═██╔═╝╚═██╔═╝ ██████╔╝ ██║ ╚██████╔╝██║ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═════╝ ╚═╝ Installer Installing binary to: /usr/local/bin/btop Installing doc to: /usr/local/share/btop Installing themes to: /usr/local/share/btop/themes ","date":"20-09-2021","objectID":"/btop-monitoring/:1:0","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Différences par rapport à top ou htop Par rapport à top, on trouvera une liste de processus facilement accessibles et filtrables de manière ergonomique. Il suffit de se déplacer avec les flèches du clavier pour sélectionner un processus, on regrettera cependant l’absence de navigation VIM qui ne fonctionnait pas lors de mes tests 🥺. Ce qui est très appréciable c’est que de la même manière que htop, on peut aussi envoyer des signaux au processus séléctionné grâce aux flèches directionnelles ! Ensuite, viennent les différences majeures par rapport à htop et à top. ","date":"20-09-2021","objectID":"/btop-monitoring/:2:0","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Un visuel plus agréable et plus lisible Déjà, niveau couleurs, c’est super agréable et ergonomique. L’utilisation des couleurs et de certains caractères spéciaux permettent d’avoir un rendu très visuel et lisible: on se croirait presque sorti du terminal. ","date":"20-09-2021","objectID":"/btop-monitoring/:2:1","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Des graphiques de l’utilisation de ressources dans le temps ! Ensuite, côté visuel toujours, la possibilité d’avoir un graphique de l’utilisation du CPU et de la mémoire dans le temps est un plus indéniable. Ceci permettra d’identifier des pics d’utilisation des ressources monitorées ! ","date":"20-09-2021","objectID":"/btop-monitoring/:2:2","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"De nouvelles informations ajoutées, notamment… L’utilisation réseau ! L’ajout d’informations comme l’espace disque et surtout l’utilisation du réseau en font un outil beaucoup plus complet que ses alternatives. On peut apercevoir la vitesse moyenne en upload et en download des paquets échangés via l’interface réseau. ","date":"20-09-2021","objectID":"/btop-monitoring/:2:3","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Un menu comme dans un jeu vidéo Enfin, le programme est vraiment bien fini et travaillé; on a même la possibilité de sélectionner un thème de couleurs dans le menu. L’utilisation des dégradés en font un logiciel agréable à regarder et pourquoi pas à laisser tourner lorsque l’on reçoit des invités 😜. On appréciera son interface qui est un bel hommage à d’anciens jeux de l’époque 🤩. ","date":"20-09-2021","objectID":"/btop-monitoring/:2:4","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Vidéo Ici, une vidéo dans laquelle je présente bpytop qui est l’ancienne version de btop! @broken_matcha Monitoring avec bpytop! ##techtok ##informatique ##geek ##dev ##programmation ##code ##education ##tiktokacademie ##linux ##macos ##developpeur ♬ lofi and minimalist BGM(325514) - Kazuhi ","date":"20-09-2021","objectID":"/btop-monitoring/:3:0","series":null,"tags":["shell","tiktok","terminal","linux","monitoring"],"title":"btop pour monitorer en lignes de commandes !","uri":"/btop-monitoring/"},{"categories":null,"content":"Avec le programme qrencode, on est capables de créer et afficher des QR Code ! ","date":"19-09-2021","objectID":"/qr-code-terminal/","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Afficher et générer un QR Code depuis le terminal !","uri":"/qr-code-terminal/"},{"categories":null,"content":"J’ai trouvé ce programme il y a très peu de temps et je le trouve vraiment sympa. Je voulais donc partager ça avec vous ! ","date":"19-09-2021","objectID":"/qr-code-terminal/:0:0","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Afficher et générer un QR Code depuis le terminal !","uri":"/qr-code-terminal/"},{"categories":null,"content":"Utilisation Le programme qrencode permet de générer des QR Code. Ce qui est génial c’est qu’il permet de les générer dans plusieurs formats. Pour générer une image, ça se fait de cette manière : qrencode -o qrcode.png ","date":"19-09-2021","objectID":"/qr-code-terminal/:0:1","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Afficher et générer un QR Code depuis le terminal !","uri":"/qr-code-terminal/"},{"categories":null,"content":"Affichage dans le terminal Et là où j’ai vraiment trouvé la commande trop cool pour un geek comme moi, c’est qu’elle permet aussi de générer et d’afficher un QR Code directement dans le terminal 😁. Pour afficher le QR Code directement depuis votre shell, ça se fait en précisant le type UTF8 ( qui permettra donc d’utiliser des caractères pour représenter le QR Code, au lieu d’une image ). echo \"https://brokenmatcha.com\" | qrencode -t UTF8 ","date":"19-09-2021","objectID":"/qr-code-terminal/:0:2","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Afficher et générer un QR Code depuis le terminal !","uri":"/qr-code-terminal/"},{"categories":null,"content":"Vidéo @broken_matcha Générer un QR Code dans le terminal ! ##qrcode ##programmation ##dev ##edutok ##tiktokacademie ##linux ##informatique ##geek ##education ##developpeur ##techtok ♬ lofi and minimalist BGM(325514) - Kazuhi ","date":"19-09-2021","objectID":"/qr-code-terminal/:0:3","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Afficher et générer un QR Code depuis le terminal !","uri":"/qr-code-terminal/"},{"categories":null,"content":"AWK est un programme très impressionnant qui permet de faire beaucoup de choses et qui complète bien l’ensemble d’outils disponibles dans un shell Unix. C’est un outil important à connaitre lorsqu’on manipule les lignes de commandes, c’est un peu le SQL de la ligne de commandes 😀. ","date":"18-09-2021","objectID":"/awk-selection-colonne/:0:0","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"Utilisation Je l’utilise principalement pour sélectionner une colonne et/ou une ligne depuis le terminal. En effet, awk est très utile en tant que programme permettant de faire des requêtes de texte. C’est un peu comme si c’était des requêtes SQL dans une base de données mais au lieu d’avoir une base de données on travaille sur du texte. Et vu que sur les systèmes Unix, on manipule énormément de texte, ça en fait un outil excellent et très puissant ! ","date":"18-09-2021","objectID":"/awk-selection-colonne/:1:0","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"Exemple ","date":"18-09-2021","objectID":"/awk-selection-colonne/:2:0","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"Récupérer l’identifiant docker d’un container en particulier Par exemple, la commande docker ps donne une liste de containers qui tournent actuellement sur un host donné. CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 629d19dd2f68 docker.elastic.co/elasticsearch/elasticsearch:7.9.3 \"/tini -- /usr/local…\" 3 days ago Up 8 hours 9200/tcp, 9300/tcp dev_es_1 1ec5572d20fe thecodingmachine/gotenberg:6 \"/tini -- gotenberg\" 3 days ago Up 8 hours 3000/tcp dev_gotenberg-1 657e688f32df mysql:5.7 Si je souhaite sélectionner l’identifiant du container Elasticsearch, je peux utiliser awk pour récupérer seulement la colonne correspondant à l’identifiant ! Ce qui se ferait de la manière suivante : ","date":"18-09-2021","objectID":"/awk-selection-colonne/:2:1","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"1. Récupérer la bonne ligne Il y a plein de manières de récupérer une ligne mais grep semble en général la solution la plus simple. Tout d’abord donc, je récupère la ligne correspondante à elasticsearch avec un filtre grep elasticsearch. Ce qui nous donne plus que la ligne : 629d19dd2f68 docker.elastic.co/elasticsearch/elasticsearch:7.9.3 \"/tini -- /usr/local…\" 3 days ago Up 8 hours 9200/tcp, 9300/tcp dev_es_1 ","date":"18-09-2021","objectID":"/awk-selection-colonne/:2:2","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"2. Récupérer la bonne colonne Une fois la ligne récupérée, je peux ensuite utiliser awk pour ne garder que la colonne correspondant à l’ID du container ! Ce qui donne la commande : docker ps | grep elasticsearch | awk '{print $1}' On obient 629d19dd2f68 qui correspond bien à notre identifiant recherché ! On peut ensuite combiner le tout avec xargs pour par exemple stopper le container 😁. ","date":"18-09-2021","objectID":"/awk-selection-colonne/:2:3","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"},{"categories":null,"content":"Aller plus loin Ce qui est génial c’est que awk fournit plein d’outils pour faire les meilleures requêtes possibles. Par exemple: pour récupérer la troisième ligne on peut utiliser awk 'NR==3' {print}' pour récupérer les lignes 3 à 5 on peut utiliser awk 'NR\u003e=3 \u0026\u0026 NR\u003c=5 {print}' pour récupérer la dernière colonne on utilisera awk '{print $NF}'. etc … Un article plus détaillé sur awk pourrait peut-être être intéressant 🤔. Vidéo @broken_matcha Sélectionner une colonne avec awk ! ##education ##linux ##learnontiktok ##tiktokacademie ##informatique ##programmation ##developpeur ##shell ##geek ##code ♬ Coffee - LoFi Hip Hop ","date":"18-09-2021","objectID":"/awk-selection-colonne/:3:0","series":null,"tags":["shell","tiktok","terminal","linux"],"title":"Séléction de colonnes avec AWK","uri":"/awk-selection-colonne/"}]